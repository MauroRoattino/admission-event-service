variables:
  UES21_REGISTRY_MIRROR: https://dockerhub.uesiglo21.edu.ar:5000
  COMPOSE_HTTP_TIMEOUT: 300
  STACK_NAME: algarrobo
  REGISTRY_NAME: admission-event-service
  ADMISSION_EVENT_SERVICE_VERSION: ${RELEASE}.${CI_PIPELINE_ID}

stages:
  - build
  - dockerize
  - deploy

build:
  image: hub.ues21.edu.ar/algarrobo/student-records/docker-mvn-builder:3-jdk-11-slim_b 
  stage: build
  script:
    - mvn -DnewVersion=${ADMISSION_EVENT_SERVICE_VERSION} versions:set
    - mvn clean install -DskipTests
  artifacts:
    paths:
      - /builds/algarrobo/admission-event-service/pom.xml
      - /builds/algarrobo/admission-event-service/target/admission-event-service-${ADMISSION_EVENT_SERVICE_VERSION}.jar
    expire_in: 1 day

dockerize branch:
  image: hub.ues21.edu.ar/algarrobo/cigroup/docker:latest
  services:
    - name: hub.ues21.edu.ar/algarrobo/cigroup/docker:dind
      alias: docker
  except:
    - tags
  variables:
    DOCKER_HOST: tcp://docker:2375
  stage: dockerize
  script:
    - ls target/
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build --build-arg ADMISSION_EVENT_SERVICE_VERSION=${ADMISSION_EVENT_SERVICE_VERSION} -t ${CI_REGISTRY_IMAGE}:${ADMISSION_EVENT_SERVICE_VERSION} .
    - docker tag ${CI_REGISTRY_IMAGE}:${ADMISSION_EVENT_SERVICE_VERSION} ${CI_REGISTRY_IMAGE}:latest
    - docker push ${CI_REGISTRY_IMAGE}:${ADMISSION_EVENT_SERVICE_VERSION}
    - docker push ${CI_REGISTRY_IMAGE}:latest

dockerize aws:
  image: hub.ues21.edu.ar/algarrobo/cigroup/docker:aws
  services:
    - name: hub.ues21.edu.ar/algarrobo/cigroup/docker:dind
      alias: docker
  except:
    - tags
  variables:
    DOCKER_HOST: tcp://docker:2375
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
  stage: dockerize
  script:
    - docker build --build-arg ADMISSION_EVENT_SERVICE_VERSION=${ADMISSION_EVENT_SERVICE_VERSION} -t ${REGISTRY_NAME} -f Dockerfile . 
    - $(aws ecr get-login --no-include-email --region ${AWS_REGION})
    - docker tag ${REGISTRY_NAME} 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:latest
    - docker tag ${REGISTRY_NAME} 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:${RELEASE}.${CI_PIPELINE_ID}
    - docker push 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:latest
    - docker push 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:${RELEASE}.${CI_PIPELINE_ID}

dockerize stable:
  image: hub.ues21.edu.ar/algarrobo/cigroup/docker:aws
  only:
    - tags
  services:
    - name: hub.ues21.edu.ar/algarrobo/cigroup/docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
  stage: dockerize
  script:
    - docker build --build-arg ADMISSION_EVENT_SERVICE_VERSION=${ADMISSION_EVENT_SERVICE_VERSION} -t ${REGISTRY_NAME} -f Dockerfile . 
    - $(aws ecr get-login --no-include-email --region ${AWS_REGION})
    - docker tag ${REGISTRY_NAME} 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:stable
    - docker tag ${REGISTRY_NAME} 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:${RELEASE}.${CI_PIPELINE_ID}
    - docker tag ${REGISTRY_NAME} 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:${CI_COMMIT_TAG}
    - docker push 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:stable
    - docker push 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:${RELEASE}.${CI_PIPELINE_ID}
    - docker push 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:${CI_COMMIT_TAG}

deploy:
  image: bitlogicos/gitlab-ssh
  stage: deploy
  variables:
    SSH_HOST: "10.168.3.123"
    SSH_USERNAME: "deploy"
    SSH_KEY: ${SSH_PRIVATE_KEY_SIGLO21}
  script:
    - gitlab-ssh "docker service rm admission-event-service || true"
    - gitlab-ssh "docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}"
    - gitlab-ssh "docker pull ${CI_REGISTRY_IMAGE}:${ADMISSION_EVENT_SERVICE_VERSION}"
    - gitlab-ssh "docker service create --name admission-event-service --secret mensajeria-confluent-kafka.properties --label traefik.port=8080 --label 'traefik.frontend.rule=Host:apidev.ues21.edu.ar;PathPrefix:/admission-event-service/api' --label 'traefik.docker.network=lb_traefik' --network lb_traefik ${CI_REGISTRY_IMAGE}:${ADMISSION_EVENT_SERVICE_VERSION}"
  when: manual

# deploy master:
#   image: hub.ues21.edu.ar/algarrobo/cigroup/docker:aws
#   only:
#     - master
#   except:
#     - tags
#   services:
#     - name: hub.ues21.edu.ar/algarrobo/cigroup/docker:dind
#       alias: docker
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
#     AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
#     AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
#     SERVICE_NAME: ${STACK_NAME}_${REGISTRY_NAME}
#   stage: deploy
#   script:
#     - $(aws ecr get-login --no-include-email --region ${AWS_REGION})
#     - docker pull 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${AWS_DEPLOY_TOOL}:latest
#     - docker run --rm -e DOCKER_MANAGER_IP=${AWS_INT_BACK_SWARM_MANAGER_HOST} -e AWS_REGION=${AWS_REGION} 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${AWS_DEPLOY_TOOL}:latest docker "service update --image 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:${RELEASE}.${CI_PIPELINE_ID} --secret mensajeria-confluent-kafka.properties --with-registry-auth ${SERVICE_NAME}"

# deploy stable:
#   image: hub.ues21.edu.ar/algarrobo/cigroup/docker:aws
#   only:
#     - tags
#   except:
#     - master
#   services:
#     - name: hub.ues21.edu.ar/algarrobo/cigroup/docker:dind
#       alias: docker
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
#     AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
#     AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
#     SERVICE_NAME: ${STACK_NAME}_${REGISTRY_NAME}
#   stage: deploy
#   script:
#     - $(aws ecr get-login --no-include-email --region ${AWS_REGION})
#     - docker pull 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${AWS_DEPLOY_TOOL}:stable
#     - docker run --rm -e DOCKER_MANAGER_IP=${AWS_QA_BACK_SWARM_MANAGER_HOST} -e AWS_REGION=${AWS_REGION} 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${AWS_DEPLOY_TOOL}:stable docker "service update --image 930137440523.dkr.ecr.${AWS_REGION}.amazonaws.com/${REGISTRY_NAME}:${RELEASE}.${CI_PIPELINE_ID} --secret mensajeria-confluent-kafka.properties --with-registry-auth ${SERVICE_NAME}"
